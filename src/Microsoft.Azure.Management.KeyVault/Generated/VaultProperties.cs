// 
// Copyright (c) Microsoft and contributors.  All rights reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//   http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// 
// See the License for the specific language governing permissions and
// limitations under the License.
// 

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

using System;
using System.Collections.Generic;
using Sandboxable.Hyak.Common;

namespace Sandboxable.Microsoft.Azure.Management.KeyVault
{
    /// <summary>
    /// Properties of the vault
    /// </summary>
    public class VaultProperties
    {
        /// <summary>
        /// Optional. Access policies for one or more principals
        /// </summary>
        public IList<AccessPolicyEntry> AccessPolicies { get; set; }

        /// <summary>
        /// Optional. Enabled or disabled for deployment
        /// </summary>
        public bool EnabledForDeployment { get; set; }

        /// <summary>
        /// Optional. Enabled or disabled for disk encryption
        /// </summary>
        public bool? EnabledForDiskEncryption { get; set; }

        /// <summary>
        /// Optional. Enabled or disabled for Azure Resource Manager template
        /// deployment
        /// </summary>
        public bool? EnabledForTemplateDeployment { get; set; }

        /// <summary>
        /// Optional. SKU details
        /// </summary>
        public Sku Sku { get; set; }

        /// <summary>
        /// Optional. Tenant ID
        /// </summary>
        public Guid TenantId { get; set; }

        /// <summary>
        /// Optional. URL of the vault
        /// </summary>
        public string VaultUri { get; set; }

        /// <summary>
        /// Initializes a new instance of the VaultProperties class.
        /// </summary>
        public VaultProperties()
        {
            this.AccessPolicies = new LazyList<AccessPolicyEntry>();
        }
    }
}

